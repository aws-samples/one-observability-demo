name: CDK Test

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'PetAdoptions/cdk/**'
  push:
    branches: [ main ]
    paths:
      - 'PetAdoptions/cdk/**'

jobs:
  cdk-synth-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: PetAdoptions/cdk/pet_stack/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('PetAdoptions/cdk/pet_stack/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: PetAdoptions/cdk/pet_stack

      - name: Build TypeScript
        run: npm run build
        working-directory: PetAdoptions/cdk/pet_stack

      - name: Run CDK synth (dry run)
        run: npx cdk synth --no-staging
        working-directory: PetAdoptions/cdk/pet_stack
        env:
          # Set required AWS environment variables for synth
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          # CDK doesn't need real AWS credentials for synth, but some constructs might check
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy

      - name: Run CDK diff (if applicable)
        run: npx cdk diff --no-staging || true
        working-directory: PetAdoptions/cdk/pet_stack
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy

  cdk-unit-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: PetAdoptions/cdk/pet_stack/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('PetAdoptions/cdk/pet_stack/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: PetAdoptions/cdk/pet_stack

      - name: Build TypeScript
        run: npm run build
        working-directory: PetAdoptions/cdk/pet_stack

      - name: Run unit tests
        run: npm test
        working-directory: PetAdoptions/cdk/pet_stack

  cdk-lint-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: PetAdoptions/cdk/pet_stack/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('PetAdoptions/cdk/pet_stack/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: PetAdoptions/cdk/pet_stack

      - name: TypeScript compilation check
        run: npx tsc --noEmit
        working-directory: PetAdoptions/cdk/pet_stack

      - name: CDK context validation
        run: |
          echo "Validating CDK context and configuration..."
          npx cdk context --clear
          npx cdk ls
        working-directory: PetAdoptions/cdk/pet_stack
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy