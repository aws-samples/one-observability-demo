name: Build Test
permissions:
    contents: read
on:
    pull_request:
        branches: [main, staging, feat/cdkpipeline]
        paths:
            - 'src/application/lambda/pethistory-node/**'
            - 'src/application/lambda/petstatusupdater/**'
            - 'src/application/microservices/payforadoption-go/**'
            - 'src/application/microservices/petfood-rs/**'
            - 'src/application/microservices/petlistadoptions-py/**'
            - 'src/application/microservices/petsearch-java/**'
            - 'src/application/microservices/petsite-net/**'
    push:
        branches: [main, staging, feat/cdkpipeline]
        paths:
            - 'src/application/lambda/pethistory-node/**'
            - 'src/application/lambda/petstatusupdater/**'
            - 'src/application/microservices/payforadoption-go/**'
            - 'src/application/microservices/petfood-rs/**'
            - 'src/application/microservices/petlistadoptions-py/**'
            - 'src/application/microservices/petsearch-java/**'
            - 'src/application/microservices/petsite-net/**'
jobs:
    docker-builds:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                service:
                    - name: payforadoption-go
                      path: src/application/microservices/payforadoption-go
                    - name: petfood-rs
                      path: src/application/microservices/petfood-rs
                    - name: petlistadoptions-py
                      path: src/application/microservices/petlistadoptions-py
                    - name: petsearch-java
                      path: src/application/microservices/petsearch-java
                    - name: petsite-net
                      path: src/application/microservices/petsite-net
        steps:
            - uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Build ${{ matrix.service.name }}
              uses: docker/build-push-action@v4
              with:
                  context: ${{ matrix.service.path }}
                  push: false
                  load: true
                  tags: ${{ matrix.service.name }}:test
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    nodejs-builds:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                service:
                    - name: pethistory
                      path: src/application/lambda/pethistory-node/
                      node-version: '18'

        steps:
            - uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.service.node-version }}
                  cache: 'npm'
                  cache-dependency-path: ${{ matrix.service.path }}/package-lock.json

            - name: Install dependencies
              run: npm ci
              working-directory: ${{ matrix.service.path }}

            - name: Run tests
              run: npm test
              working-directory: ${{ matrix.service.path }}

            - name: Verify build
              run: npm run build --if-present
              working-directory: ${{ matrix.service.path }}

    dotnet-builds:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                project:
                    - name: petsite
                      path: src/application/microservices/petsite-net/petsite.sln
        steps:
            - uses: actions/checkout@v3

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: '8.0.x'

            - name: Restore dependencies
              run: dotnet restore ${{ matrix.project.path }}

            - name: Build
              run: dotnet build ${{ matrix.project.path }} --no-restore
