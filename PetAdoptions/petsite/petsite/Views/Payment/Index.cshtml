@{
  ViewData["Title"] = "Complete Adoption";
}

<section class="pet-hero">
  <div class="container">
    <img class="pet-hero-title" src="~/images/main_banner_text.png"/>
  </div>
</section>
<br/>

<div class="container align-items-center">
  @if (ViewData["txStatus"].ToString() == "success")
  {
    <div class="alert alert-success" role="alert" id="success-alert">
      <h4 class="alert-heading">Adoption Complete</h4>
      <hr>
      <p class="mb-0">Thank you for adopting me!</p>
      <canvas id="confetti-canvas"
              style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 9999;"></canvas>
    </div>
    <script>
      const canvas = document.getElementById('confetti-canvas');
      const ctx = canvas.getContext('2d');
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;

      const confetti = [];
      for (let i = 0; i < 100; i++) {
        confetti.push({
          x: Math.random() * canvas.width,
          y: -10,
          vx: (Math.random() - 0.5) * 4,
          vy: Math.random() * 3 + 2,
          color: ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57'][Math.floor(Math.random() * 5)]
        });
      }

      function animate() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        confetti.forEach(p => {
          p.x += p.vx;
          p.y += p.vy;
          ctx.fillStyle = p.color;
          ctx.fillRect(p.x, p.y, 8, 8);
        });
        if (confetti.some(p => p.y < canvas.height)) requestAnimationFrame(animate);
        else canvas.remove();
      }

      animate();
    </script>
  }
  else
  {
    <br/>
    <div class="container align-items-center">
      <div class="alert alert-danger" role="alert">
        <h4 class="alert-heading">Error</h4>
        <hr>
        <p class="mb-0">Sorry, something went wrong</p>
      </div>
    </div>
    <p>Error @ViewData["txStatus"]</p>
  }
</div>

<div class="container mt-4">
  <h3>Pet Food Available</h3>
  <div id="food-grid" class="row">
    <!-- Food items will be loaded here -->
  </div>
</div>

<script>
  async function loadFoods() {
    try {
      const response = await fetch('/FoodService/GetFoods');
      const foods = await response.json();
      const grid = document.getElementById('food-grid');
      
      foods.forEach(food => {
        const foodItem = `
          <div class="col-md-4 mb-3">
            <div class="card">
              <img src="/images/food/${food.food_image}" class="card-img-top" alt="${food.food_name}" style="height: 200px; object-fit: cover;">
              <div class="card-body">
                <h5 class="card-title">${food.food_name}</h5>
                <p class="card-text">${food.food_description}</p>
                <p class="card-text"><strong>$${food.food_price}</strong></p>
                <p class="card-text"><small class="text-muted">For: ${food.food_for} | Type: ${food.food_type}</small></p>
                <form method="post" action="/FoodService/BuyFood">
                  <input type="hidden" name="foodId" value="${food.food_id}">
                  <button type="submit" class="btn btn-primary">Buy</button>
                </form>
              </div>
            </div>
          </div>
        `;
        grid.innerHTML += foodItem;
      });
    } catch (error) {
      console.error('Error loading foods:', error);
    }
  }
  
  // Load foods when page loads
  //document.addEventListener('DOMContentLoaded', loadFoods);
</script>