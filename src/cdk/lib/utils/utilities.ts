/*
Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
SPDX-License-Identifier: Apache-2.0
*/
/**
 * Utilities module provides helper functions for common CDK operations.
 *
 * This module contains static utility functions for tagging resources and
 * retrieving CDK lookup role ARNs.
 *
 * @packageDocumentation
 */
import { Annotations, CfnOutput, CfnResource, Tags } from 'aws-cdk-lib';
import { Construct } from 'constructs';
import { NagSuppressions } from 'cdk-nag';
import { Policy, Role } from 'aws-cdk-lib/aws-iam';
import { StringParameter } from 'aws-cdk-lib/aws-ssm';

/**
 * List of AWS CloudFormation resource types that support tagging.
 * This list is used to determine which resources can have tags applied directly.
 *
 * @internal
 */
const TAGGABLE_RESOURCE_TYPE_LIST = new Set([
    'AWS::ACMPCA::CertificateAuthority',
    'AWS::APS::RuleGroupsNamespace',
    'AWS::APS::Scraper',
    'AWS::APS::Workspace',
    'AWS::AccessAnalyzer::Analyzer',
    'AWS::AmazonMQ::Configuration',
    'AWS::Amplify::App',
    'AWS::Amplify::Branch',
    'AWS::AmplifyUIBuilder::Component',
    'AWS::AmplifyUIBuilder::Form',
    'AWS::AmplifyUIBuilder::Theme',
    'AWS::ApiGateway::ApiKey',
    'AWS::ApiGateway::ClientCertificate',
    'AWS::ApiGateway::DomainName',
    'AWS::ApiGateway::DomainNameAccessAssociation',
    'AWS::ApiGateway::DomainNameV2',
    'AWS::ApiGateway::RestApi',
    'AWS::ApiGateway::Stage',
    'AWS::ApiGateway::UsagePlan',
    'AWS::ApiGateway::VpcLink',
    'AWS::ApiGatewayV2::Api',
    'AWS::ApiGatewayV2::DomainName',
    'AWS::ApiGatewayV2::VpcLink',
    'AWS::AppConfig::Application',
    'AWS::AppConfig::ConfigurationProfile',
    'AWS::AppConfig::Deployment',
    'AWS::AppConfig::DeploymentStrategy',
    'AWS::AppConfig::Environment',
    'AWS::AppConfig::Extension',
    'AWS::AppConfig::ExtensionAssociation',
    'AWS::AppFlow::Flow',
    'AWS::AppIntegrations::Application',
    'AWS::AppIntegrations::DataIntegration',
    'AWS::AppIntegrations::EventIntegration',
    'AWS::AppRunner::AutoScalingConfiguration',
    'AWS::AppRunner::ObservabilityConfiguration',
    'AWS::AppRunner::Service',
    'AWS::AppRunner::VpcConnector',
    'AWS::AppRunner::VpcIngressConnection',
    'AWS::AppStream::AppBlock',
    'AWS::AppStream::AppBlockBuilder',
    'AWS::AppStream::Application',
    'AWS::AppSync::Api',
    'AWS::AppSync::ChannelNamespace',
    'AWS::AppSync::DomainName',
    'AWS::AppSync::GraphQLApi',
    'AWS::AppTest::TestCase',
    'AWS::ApplicationInsights::Application',
    'AWS::ApplicationSignals::ServiceLevelObjective',
    'AWS::Athena::CapacityReservation',
    'AWS::Athena::DataCatalog',
    'AWS::Athena::WorkGroup',
    'AWS::AuditManager::Assessment',
    'AWS::AutoScaling::AutoScalingGroup',
    'AWS::B2BI::Capability',
    'AWS::B2BI::Partnership',
    'AWS::B2BI::Profile',
    'AWS::B2BI::Transformer',
    'AWS::BCMDataExports::Export',
    'AWS::Backup::BackupPlan',
    'AWS::Backup::BackupVault',
    'AWS::Backup::Framework',
    'AWS::Backup::LogicallyAirGappedBackupVault',
    'AWS::Backup::ReportPlan',
    'AWS::Backup::RestoreTestingPlan',
    'AWS::BackupGateway::Hypervisor',
    'AWS::Batch::ComputeEnvironment',
    'AWS::Batch::ConsumableResource',
    'AWS::Batch::JobDefinition',
    'AWS::Batch::JobQueue',
    'AWS::Batch::SchedulingPolicy',
    'AWS::Bedrock::Agent',
    'AWS::Bedrock::AgentAlias',
    'AWS::Bedrock::ApplicationInferenceProfile',
    'AWS::Bedrock::Blueprint',
    'AWS::Bedrock::DataAutomationProject',
    'AWS::Bedrock::Flow',
    'AWS::Bedrock::FlowAlias',
    'AWS::Bedrock::Guardrail',
    'AWS::Bedrock::KnowledgeBase',
    'AWS::Bedrock::Prompt',
    'AWS::Bedrock::PromptVersion',
    'AWS::BillingConductor::BillingGroup',
    'AWS::BillingConductor::CustomLineItem',
    'AWS::BillingConductor::PricingPlan',
    'AWS::BillingConductor::PricingRule',
    'AWS::Budgets::BudgetsAction',
    'AWS::CE::AnomalyMonitor',
    'AWS::CE::AnomalySubscription',
    'AWS::CE::CostCategory',
    'AWS::Cassandra::Keyspace',
    'AWS::Cassandra::Table',
    'AWS::Chatbot::CustomAction',
    'AWS::Chatbot::MicrosoftTeamsChannelConfiguration',
    'AWS::Chatbot::SlackChannelConfiguration',
    'AWS::CleanRooms::AnalysisTemplate',
    'AWS::CleanRooms::Collaboration',
    'AWS::CleanRooms::ConfiguredTable',
    'AWS::CleanRooms::ConfiguredTableAssociation',
    'AWS::CleanRooms::IdMappingTable',
    'AWS::CleanRooms::IdNamespaceAssociation',
    'AWS::CleanRooms::Membership',
    'AWS::CleanRooms::PrivacyBudgetTemplate',
    'AWS::CleanRoomsML::TrainingDataset',
    'AWS::CloudFormation::Stack',
    'AWS::CloudFormation::StackSet',
    'AWS::CloudFront::AnycastIpList',
    'AWS::CloudFront::ConnectionGroup',
    'AWS::CloudFront::Distribution',
    'AWS::CloudFront::DistributionTenant',
    'AWS::CloudFront::VpcOrigin',
    'AWS::CloudTrail::Channel',
    'AWS::CloudTrail::Dashboard',
    'AWS::CloudTrail::EventDataStore',
    'AWS::CloudTrail::Trail',
    'AWS::CloudWatch::Alarm',
    'AWS::CloudWatch::CompositeAlarm',
    'AWS::CloudWatch::MetricStream',
    'AWS::CodeArtifact::Domain',
    'AWS::CodeArtifact::PackageGroup',
    'AWS::CodeArtifact::Repository',
    'AWS::CodeBuild::Fleet',
    'AWS::CodeConnections::Connection',
    'AWS::CodeDeploy::Application',
    'AWS::CodeGuruProfiler::ProfilingGroup',
    'AWS::CodePipeline::CustomActionType',
    'AWS::CodePipeline::Pipeline',
    'AWS::CodeStarConnections::Connection',
    'AWS::CodeStarConnections::RepositoryLink',
    'AWS::Cognito::IdentityPool',
    'AWS::Cognito::UserPool',
    'AWS::Comprehend::DocumentClassifier',
    'AWS::Comprehend::Flywheel',
    'AWS::Config::AggregationAuthorization',
    'AWS::Config::ConfigurationAggregator',
    'AWS::Config::StoredQuery',
    'AWS::Connect::AgentStatus',
    'AWS::Connect::ContactFlow',
    'AWS::Connect::ContactFlowModule',
    'AWS::Connect::EmailAddress',
    'AWS::Connect::EvaluationForm',
    'AWS::Connect::HoursOfOperation',
    'AWS::Connect::Instance',
    'AWS::Connect::PhoneNumber',
    'AWS::Connect::Prompt',
    'AWS::Connect::Queue',
    'AWS::Connect::QuickConnect',
    'AWS::Connect::RoutingProfile',
    'AWS::Connect::Rule',
    'AWS::Connect::SecurityProfile',
    'AWS::Connect::TaskTemplate',
    'AWS::Connect::TrafficDistributionGroup',
    'AWS::Connect::User',
    'AWS::Connect::UserHierarchyGroup',
    'AWS::Connect::View',
    'AWS::ConnectCampaigns::Campaign',
    'AWS::ConnectCampaignsV2::Campaign',
    'AWS::ControlTower::EnabledBaseline',
    'AWS::ControlTower::EnabledControl',
    'AWS::ControlTower::LandingZone',
    'AWS::CustomerProfiles::CalculatedAttributeDefinition',
    'AWS::CustomerProfiles::Domain',
    'AWS::CustomerProfiles::EventStream',
    'AWS::CustomerProfiles::EventTrigger',
    'AWS::CustomerProfiles::Integration',
    'AWS::CustomerProfiles::ObjectType',
    'AWS::CustomerProfiles::SegmentDefinition',
    'AWS::DMS::DataMigration',
    'AWS::DMS::DataProvider',
    'AWS::DMS::InstanceProfile',
    'AWS::DMS::MigrationProject',
    'AWS::DMS::ReplicationConfig',
    'AWS::DSQL::Cluster',
    'AWS::DataBrew::Dataset',
    'AWS::DataBrew::Job',
    'AWS::DataBrew::Project',
    'AWS::DataBrew::Recipe',
    'AWS::DataBrew::Ruleset',
    'AWS::DataBrew::Schedule',
    'AWS::DataPipeline::Pipeline',
    'AWS::DataSync::Agent',
    'AWS::DataSync::LocationAzureBlob',
    'AWS::DataSync::LocationEFS',
    'AWS::DataSync::LocationFSxLustre',
    'AWS::DataSync::LocationFSxONTAP',
    'AWS::DataSync::LocationFSxOpenZFS',
    'AWS::DataSync::LocationFSxWindows',
    'AWS::DataSync::LocationHDFS',
    'AWS::DataSync::LocationNFS',
    'AWS::DataSync::LocationObjectStorage',
    'AWS::DataSync::LocationS3',
    'AWS::DataSync::LocationSMB',
    'AWS::DataSync::StorageSystem',
    'AWS::DataSync::Task',
    'AWS::DataZone::Domain',
    'AWS::Deadline::Farm',
    'AWS::Deadline::Fleet',
    'AWS::Deadline::LicenseEndpoint',
    'AWS::Deadline::Queue',
    'AWS::Detective::Graph',
    'AWS::DocDBElastic::Cluster',
    'AWS::DynamoDB::Table',
    'AWS::EC2::CapacityReservation',
    'AWS::EC2::CapacityReservationFleet',
    'AWS::EC2::CarrierGateway',
    'AWS::EC2::CustomerGateway',
    'AWS::EC2::DHCPOptions',
    'AWS::EC2::EIP',
    'AWS::EC2::FlowLog',
    'AWS::EC2::IPAM',
    'AWS::EC2::IPAMPool',
    'AWS::EC2::IPAMResourceDiscovery',
    'AWS::EC2::IPAMResourceDiscoveryAssociation',
    'AWS::EC2::IPAMScope',
    'AWS::EC2::Instance',
    'AWS::EC2::InstanceConnectEndpoint',
    'AWS::EC2::InternetGateway',
    'AWS::EC2::KeyPair',
    'AWS::EC2::LocalGatewayRouteTable',
    'AWS::EC2::LocalGatewayRouteTableVPCAssociation',
    'AWS::EC2::LocalGatewayRouteTableVirtualInterfaceGroupAssociation',
    'AWS::EC2::NatGateway',
    'AWS::EC2::NetworkAcl',
    'AWS::EC2::NetworkInsightsAccessScope',
    'AWS::EC2::NetworkInsightsAccessScopeAnalysis',
    'AWS::EC2::NetworkInsightsAnalysis',
    'AWS::EC2::NetworkInsightsPath',
    'AWS::EC2::NetworkInterface',
    'AWS::EC2::PlacementGroup',
    'AWS::EC2::PrefixList',
    'AWS::EC2::RouteServer',
    'AWS::EC2::RouteServerEndpoint',
    'AWS::EC2::RouteServerPeer',
    'AWS::EC2::RouteTable',
    'AWS::EC2::SecurityGroup',
    'AWS::EC2::Subnet',
    'AWS::EC2::TransitGateway',
    'AWS::EC2::TransitGatewayAttachment',
    'AWS::EC2::TransitGatewayConnect',
    'AWS::EC2::TransitGatewayMulticastDomain',
    'AWS::EC2::TransitGatewayPeeringAttachment',
    'AWS::EC2::TransitGatewayRouteTable',
    'AWS::EC2::TransitGatewayVpcAttachment',
    'AWS::EC2::VPC',
    'AWS::EC2::VPCBlockPublicAccessExclusion',
    'AWS::EC2::VPCEndpoint',
    'AWS::EC2::VPCEndpointService',
    'AWS::EC2::VPCPeeringConnection',
    'AWS::EC2::VPNConnection',
    'AWS::EC2::VPNGateway',
    'AWS::EC2::VerifiedAccessEndpoint',
    'AWS::EC2::VerifiedAccessGroup',
    'AWS::EC2::VerifiedAccessInstance',
    'AWS::EC2::VerifiedAccessTrustProvider',
    'AWS::EC2::Volume',
    'AWS::ECR::PublicRepository',
    'AWS::ECR::Repository',
    'AWS::ECS::CapacityProvider',
    'AWS::ECS::Cluster',
    'AWS::ECS::Service',
    'AWS::ECS::TaskDefinition',
    'AWS::ECS::TaskSet',
    'AWS::EFS::AccessPoint',
    'AWS::EFS::FileSystem',
    'AWS::EKS::AccessEntry',
    'AWS::EKS::Addon',
    'AWS::EKS::Cluster',
    'AWS::EKS::FargateProfile',
    'AWS::EKS::IdentityProviderConfig',
    'AWS::EKS::Nodegroup',
    'AWS::EKS::PodIdentityAssociation',
    'AWS::EMR::Studio',
    'AWS::EMR::WALWorkspace',
    'AWS::EMRContainers::VirtualCluster',
    'AWS::EMRServerless::Application',
    'AWS::ElastiCache::ParameterGroup',
    'AWS::ElastiCache::ServerlessCache',
    'AWS::ElastiCache::SubnetGroup',
    'AWS::ElastiCache::User',
    'AWS::ElastiCache::UserGroup',
    'AWS::ElasticBeanstalk::Environment',
    'AWS::ElasticLoadBalancingV2::LoadBalancer',
    'AWS::ElasticLoadBalancingV2::TargetGroup',
    'AWS::ElasticLoadBalancingV2::TrustStore',
    'AWS::EntityResolution::IdMappingWorkflow',
    'AWS::EntityResolution::IdNamespace',
    'AWS::EntityResolution::MatchingWorkflow',
    'AWS::EntityResolution::SchemaMapping',
    'AWS::EventSchemas::Discoverer',
    'AWS::EventSchemas::Registry',
    'AWS::EventSchemas::Schema',
    'AWS::Events::EventBus',
    'AWS::Evidently::Experiment',
    'AWS::Evidently::Feature',
    'AWS::Evidently::Launch',
    'AWS::Evidently::Project',
    'AWS::Evidently::Segment',
    'AWS::FIS::ExperimentTemplate',
    'AWS::FMS::Policy',
    'AWS::FMS::ResourceSet',
    'AWS::FSx::DataRepositoryAssociation',
    'AWS::FinSpace::Environment',
    'AWS::Forecast::DatasetGroup',
    'AWS::FraudDetector::List',
    'AWS::GameLift::Alias',
    'AWS::GameLift::Build',
    'AWS::GameLift::ContainerFleet',
    'AWS::GameLift::ContainerGroupDefinition',
    'AWS::GameLift::Fleet',
    'AWS::GameLift::GameServerGroup',
    'AWS::GameLift::GameSessionQueue',
    'AWS::GameLift::Location',
    'AWS::GameLift::MatchmakingConfiguration',
    'AWS::GameLift::MatchmakingRuleSet',
    'AWS::GameLift::Script',
    'AWS::GlobalAccelerator::Accelerator',
    'AWS::GlobalAccelerator::CrossAccountAttachment',
    'AWS::Glue::Crawler',
    'AWS::Glue::Job',
    'AWS::Glue::Registry',
    'AWS::Glue::Schema',
    'AWS::Glue::Trigger',
    'AWS::Glue::UsageProfile',
    'AWS::GreengrassV2::ComponentVersion',
    'AWS::GreengrassV2::Deployment',
    'AWS::GroundStation::Config',
    'AWS::GroundStation::DataflowEndpointGroup',
    'AWS::GroundStation::MissionProfile',
    'AWS::GuardDuty::Detector',
    'AWS::GuardDuty::Filter',
    'AWS::GuardDuty::IPSet',
    'AWS::GuardDuty::MalwareProtectionPlan',
    'AWS::GuardDuty::PublishingDestination',
    'AWS::GuardDuty::ThreatIntelSet',
    'AWS::HealthImaging::Datastore',
    'AWS::HealthLake::FHIRDatastore',
    'AWS::IAM::OIDCProvider',
    'AWS::IAM::Role',
    'AWS::IAM::SAMLProvider',
    'AWS::IAM::ServerCertificate',
    'AWS::IAM::User',
    'AWS::IVS::Channel',
    'AWS::IVS::EncoderConfiguration',
    'AWS::IVS::IngestConfiguration',
    'AWS::IVS::PlaybackKeyPair',
    'AWS::IVS::PlaybackRestrictionPolicy',
    'AWS::IVS::PublicKey',
    'AWS::IVS::RecordingConfiguration',
    'AWS::IVS::Stage',
    'AWS::IVS::StorageConfiguration',
    'AWS::IVS::StreamKey',
    'AWS::IVSChat::LoggingConfiguration',
    'AWS::IVSChat::Room',
    'AWS::ImageBuilder::Component',
    'AWS::ImageBuilder::ContainerRecipe',
    'AWS::ImageBuilder::DistributionConfiguration',
    'AWS::ImageBuilder::Image',
    'AWS::ImageBuilder::ImagePipeline',
    'AWS::ImageBuilder::ImageRecipe',
    'AWS::ImageBuilder::InfrastructureConfiguration',
    'AWS::ImageBuilder::LifecyclePolicy',
    'AWS::ImageBuilder::Workflow',
    'AWS::InspectorV2::CisScanConfiguration',
    'AWS::InternetMonitor::Monitor',
    'AWS::Invoicing::InvoiceUnit',
    'AWS::IoT::Authorizer',
    'AWS::IoT::BillingGroup',
    'AWS::IoT::CACertificate',
    'AWS::IoT::CertificateProvider',
    'AWS::IoT::Command',
    'AWS::IoT::CustomMetric',
    'AWS::IoT::Dimension',
    'AWS::IoT::DomainConfiguration',
    'AWS::IoT::FleetMetric',
    'AWS::IoT::JobTemplate',
    'AWS::IoT::Policy',
    'AWS::IoT::ProvisioningTemplate',
    'AWS::IoT::RoleAlias',
    'AWS::IoT::ScheduledAudit',
    'AWS::IoT::SecurityProfile',
    'AWS::IoT::SoftwarePackage',
    'AWS::IoT::SoftwarePackageVersion',
    'AWS::IoT::ThingGroup',
    'AWS::IoT::ThingType',
    'AWS::IoT::TopicRule',
    'AWS::IoTAnalytics::Channel',
    'AWS::IoTAnalytics::Dataset',
    'AWS::IoTAnalytics::Datastore',
    'AWS::IoTAnalytics::Pipeline',
    'AWS::IoTCoreDeviceAdvisor::SuiteDefinition',
    'AWS::IoTEvents::AlarmModel',
    'AWS::IoTEvents::DetectorModel',
    'AWS::IoTEvents::Input',
    'AWS::IoTFleetWise::Campaign',
    'AWS::IoTFleetWise::DecoderManifest',
    'AWS::IoTFleetWise::Fleet',
    'AWS::IoTFleetWise::ModelManifest',
    'AWS::IoTFleetWise::SignalCatalog',
    'AWS::IoTFleetWise::StateTemplate',
    'AWS::IoTFleetWise::Vehicle',
    'AWS::IoTSiteWise::Asset',
    'AWS::IoTSiteWise::AssetModel',
    'AWS::IoTSiteWise::Dashboard',
    'AWS::IoTSiteWise::Dataset',
    'AWS::IoTSiteWise::Gateway',
    'AWS::IoTSiteWise::Portal',
    'AWS::IoTSiteWise::Project',
    'AWS::IoTTwinMaker::ComponentType',
    'AWS::IoTTwinMaker::Entity',
    'AWS::IoTTwinMaker::Scene',
    'AWS::IoTTwinMaker::SyncJob',
    'AWS::IoTTwinMaker::Workspace',
    'AWS::IoTWireless::Destination',
    'AWS::IoTWireless::DeviceProfile',
    'AWS::IoTWireless::FuotaTask',
    'AWS::IoTWireless::MulticastGroup',
    'AWS::IoTWireless::NetworkAnalyzerConfiguration',
    'AWS::IoTWireless::PartnerAccount',
    'AWS::IoTWireless::ServiceProfile',
    'AWS::IoTWireless::TaskDefinition',
    'AWS::IoTWireless::WirelessDevice',
    'AWS::IoTWireless::WirelessDeviceImportTask',
    'AWS::IoTWireless::WirelessGateway',
    'AWS::KMS::Key',
    'AWS::KMS::ReplicaKey',
    'AWS::KafkaConnect::Connector',
    'AWS::KafkaConnect::CustomPlugin',
    'AWS::KafkaConnect::WorkerConfiguration',
    'AWS::Kendra::DataSource',
    'AWS::Kendra::Faq',
    'AWS::Kendra::Index',
    'AWS::KendraRanking::ExecutionPlan',
    'AWS::Kinesis::Stream',
    'AWS::KinesisAnalyticsV2::Application',
    'AWS::KinesisVideo::SignalingChannel',
    'AWS::KinesisVideo::Stream',
    'AWS::Lambda::CodeSigningConfig',
    'AWS::Lambda::EventSourceMapping',
    'AWS::Lambda::Function',
    'AWS::LaunchWizard::Deployment',
    'AWS::Lex::Bot',
    'AWS::Lightsail::Alarm',
    'AWS::Lightsail::Bucket',
    'AWS::Lightsail::Certificate',
    'AWS::Lightsail::Container',
    'AWS::Lightsail::Database',
    'AWS::Lightsail::Disk',
    'AWS::Lightsail::Distribution',
    'AWS::Lightsail::Instance',
    'AWS::Lightsail::LoadBalancer',
    'AWS::Lightsail::LoadBalancerTlsCertificate',
    'AWS::Lightsail::StaticIp',
    'AWS::Location::APIKey',
    'AWS::Location::GeofenceCollection',
    'AWS::Location::Map',
    'AWS::Location::PlaceIndex',
    'AWS::Location::RouteCalculator',
    'AWS::Location::Tracker',
    'AWS::Logs::Delivery',
    'AWS::Logs::DeliveryDestination',
    'AWS::Logs::DeliverySource',
    'AWS::Logs::LogGroup',
    'AWS::LookoutEquipment::InferenceScheduler',
    'AWS::M2::Application',
    'AWS::M2::Environment',
    'AWS::MSK::Cluster',
    'AWS::MSK::Replicator',
    'AWS::MSK::ServerlessCluster',
    'AWS::MSK::VpcConnection',
    'AWS::MWAA::Environment',
    'AWS::Macie::AllowList',
    'AWS::Macie::CustomDataIdentifier',
    'AWS::Macie::FindingsFilter',
    'AWS::ManagedBlockchain::Accessor',
    'AWS::MediaLive::ChannelPlacementGroup',
    'AWS::MediaLive::CloudWatchAlarmTemplate',
    'AWS::MediaLive::CloudWatchAlarmTemplateGroup',
    'AWS::MediaLive::Cluster',
    'AWS::MediaLive::EventBridgeRuleTemplate',
    'AWS::MediaLive::EventBridgeRuleTemplateGroup',
    'AWS::MediaLive::Multiplex',
    'AWS::MediaLive::Network',
    'AWS::MediaLive::SdiSource',
    'AWS::MediaLive::SignalMap',
    'AWS::MediaPackage::Asset',
    'AWS::MediaPackage::Channel',
    'AWS::MediaPackage::OriginEndpoint',
    'AWS::MediaPackage::PackagingConfiguration',
    'AWS::MediaPackage::PackagingGroup',
    'AWS::MediaPackageV2::Channel',
    'AWS::MediaPackageV2::ChannelGroup',
    'AWS::MediaPackageV2::OriginEndpoint',
    'AWS::MediaTailor::Channel',
    'AWS::MediaTailor::LiveSource',
    'AWS::MediaTailor::PlaybackConfiguration',
    'AWS::MediaTailor::SourceLocation',
    'AWS::MediaTailor::VodSource',
    'AWS::MemoryDB::ACL',
    'AWS::MemoryDB::Cluster',
    'AWS::MemoryDB::MultiRegionCluster',
    'AWS::MemoryDB::ParameterGroup',
    'AWS::MemoryDB::SubnetGroup',
    'AWS::MemoryDB::User',
    'AWS::Neptune::DBCluster',
    'AWS::Neptune::DBClusterParameterGroup',
    'AWS::Neptune::DBParameterGroup',
    'AWS::Neptune::DBSubnetGroup',
    'AWS::NeptuneGraph::Graph',
    'AWS::NetworkFirewall::Firewall',
    'AWS::NetworkFirewall::FirewallPolicy',
    'AWS::NetworkFirewall::RuleGroup',
    'AWS::NetworkFirewall::TLSInspectionConfiguration',
    'AWS::NetworkManager::ConnectAttachment',
    'AWS::NetworkManager::ConnectPeer',
    'AWS::NetworkManager::CoreNetwork',
    'AWS::NetworkManager::Device',
    'AWS::NetworkManager::DirectConnectGatewayAttachment',
    'AWS::NetworkManager::GlobalNetwork',
    'AWS::NetworkManager::Link',
    'AWS::NetworkManager::Site',
    'AWS::NetworkManager::SiteToSiteVpnAttachment',
    'AWS::NetworkManager::TransitGatewayPeering',
    'AWS::NetworkManager::TransitGatewayRouteTableAttachment',
    'AWS::NetworkManager::VpcAttachment',
    'AWS::Notifications::NotificationConfiguration',
    'AWS::NotificationsContacts::EmailContact',
    'AWS::OSIS::Pipeline',
    'AWS::Oam::Link',
    'AWS::Oam::Sink',
    'AWS::Omics::AnnotationStore',
    'AWS::Omics::ReferenceStore',
    'AWS::Omics::RunGroup',
    'AWS::Omics::SequenceStore',
    'AWS::Omics::VariantStore',
    'AWS::Omics::Workflow',
    'AWS::OpenSearchServerless::Collection',
    'AWS::OpenSearchService::Application',
    'AWS::Organizations::Account',
    'AWS::Organizations::OrganizationalUnit',
    'AWS::Organizations::Policy',
    'AWS::Organizations::ResourcePolicy',
    'AWS::PCAConnectorAD::Connector',
    'AWS::PCAConnectorAD::DirectoryRegistration',
    'AWS::PCAConnectorAD::Template',
    'AWS::PCAConnectorSCEP::Challenge',
    'AWS::PCAConnectorSCEP::Connector',
    'AWS::PCS::Cluster',
    'AWS::PCS::ComputeNodeGroup',
    'AWS::PCS::Queue',
    'AWS::Panorama::ApplicationInstance',
    'AWS::Panorama::Package',
    'AWS::PaymentCryptography::Key',
    'AWS::Pinpoint::InAppTemplate',
    'AWS::Pipes::Pipe',
    'AWS::Proton::EnvironmentAccountConnection',
    'AWS::Proton::EnvironmentTemplate',
    'AWS::Proton::ServiceTemplate',
    'AWS::QBusiness::Application',
    'AWS::QBusiness::DataAccessor',
    'AWS::QBusiness::DataSource',
    'AWS::QBusiness::Index',
    'AWS::QBusiness::Plugin',
    'AWS::QBusiness::Retriever',
    'AWS::QBusiness::WebExperience',
    'AWS::QLDB::Stream',
    'AWS::QuickSight::Analysis',
    'AWS::QuickSight::CustomPermissions',
    'AWS::QuickSight::Dashboard',
    'AWS::QuickSight::DataSet',
    'AWS::QuickSight::DataSource',
    'AWS::QuickSight::Folder',
    'AWS::QuickSight::Template',
    'AWS::QuickSight::Theme',
    'AWS::QuickSight::VPCConnection',
    'AWS::RAM::Permission',
    'AWS::RAM::ResourceShare',
    'AWS::RDS::CustomDBEngineVersion',
    'AWS::RDS::DBCluster',
    'AWS::RDS::DBClusterParameterGroup',
    'AWS::RDS::DBInstance',
    'AWS::RDS::DBParameterGroup',
    'AWS::RDS::DBProxy',
    'AWS::RDS::DBProxyEndpoint',
    'AWS::RDS::DBShardGroup',
    'AWS::RDS::DBSubnetGroup',
    'AWS::RDS::EventSubscription',
    'AWS::RDS::GlobalCluster',
    'AWS::RDS::Integration',
    'AWS::RDS::OptionGroup',
    'AWS::RUM::AppMonitor',
    'AWS::Rbin::Rule',
    'AWS::Redshift::Cluster',
    'AWS::Redshift::ClusterParameterGroup',
    'AWS::Redshift::Integration',
    'AWS::RedshiftServerless::Namespace',
    'AWS::RedshiftServerless::Workgroup',
    'AWS::RefactorSpaces::Application',
    'AWS::RefactorSpaces::Environment',
    'AWS::RefactorSpaces::Route',
    'AWS::RefactorSpaces::Service',
    'AWS::Rekognition::Collection',
    'AWS::Rekognition::StreamProcessor',
    'AWS::ResilienceHub::App',
    'AWS::ResilienceHub::ResiliencyPolicy',
    'AWS::ResourceExplorer2::Index',
    'AWS::ResourceExplorer2::View',
    'AWS::ResourceGroups::Group',
    'AWS::RolesAnywhere::CRL',
    'AWS::RolesAnywhere::Profile',
    'AWS::RolesAnywhere::TrustAnchor',
    'AWS::Route53::HealthCheck',
    'AWS::Route53::HostedZone',
    'AWS::Route53Profiles::Profile',
    'AWS::Route53Profiles::ProfileAssociation',
    'AWS::Route53RecoveryControl::Cluster',
    'AWS::Route53RecoveryControl::ControlPanel',
    'AWS::Route53RecoveryControl::SafetyRule',
    'AWS::Route53RecoveryReadiness::Cell',
    'AWS::Route53RecoveryReadiness::ReadinessCheck',
    'AWS::Route53RecoveryReadiness::RecoveryGroup',
    'AWS::Route53RecoveryReadiness::ResourceSet',
    'AWS::Route53Resolver::FirewallDomainList',
    'AWS::Route53Resolver::FirewallRuleGroup',
    'AWS::Route53Resolver::FirewallRuleGroupAssociation',
    'AWS::Route53Resolver::OutpostResolver',
    'AWS::Route53Resolver::ResolverQueryLoggingConfig',
    'AWS::Route53Resolver::ResolverRule',
    'AWS::S3::AccessGrant',
    'AWS::S3::AccessGrantsInstance',
    'AWS::S3::AccessGrantsLocation',
    'AWS::S3::Bucket',
    'AWS::S3::StorageLens',
    'AWS::S3::StorageLensGroup',
    'AWS::S3Outposts::Bucket',
    'AWS::SES::MailManagerAddonInstance',
    'AWS::SES::MailManagerAddonSubscription',
    'AWS::SES::MailManagerArchive',
    'AWS::SES::MailManagerIngressPoint',
    'AWS::SES::MailManagerRelay',
    'AWS::SES::MailManagerRuleSet',
    'AWS::SES::MailManagerTrafficPolicy',
    'AWS::SNS::Topic',
    'AWS::SQS::Queue',
    'AWS::SSM::Document',
    'AWS::SSM::Parameter',
    'AWS::SSM::PatchBaseline',
    'AWS::SSMContacts::Rotation',
    'AWS::SSMIncidents::ReplicationSet',
    'AWS::SSMIncidents::ResponsePlan',
    'AWS::SSMQuickSetup::ConfigurationManager',
    'AWS::SSO::Application',
    'AWS::SSO::Instance',
    'AWS::SSO::PermissionSet',
    'AWS::SageMaker::Cluster',
    'AWS::SageMaker::DataQualityJobDefinition',
    'AWS::SageMaker::Endpoint',
    'AWS::SageMaker::FeatureGroup',
    'AWS::SageMaker::Image',
    'AWS::SageMaker::InferenceComponent',
    'AWS::SageMaker::InferenceExperiment',
    'AWS::SageMaker::MlflowTrackingServer',
    'AWS::SageMaker::ModelBiasJobDefinition',
    'AWS::SageMaker::ModelCard',
    'AWS::SageMaker::ModelExplainabilityJobDefinition',
    'AWS::SageMaker::ModelPackage',
    'AWS::SageMaker::ModelPackageGroup',
    'AWS::SageMaker::ModelQualityJobDefinition',
    'AWS::SageMaker::PartnerApp',
    'AWS::SageMaker::Pipeline',
    'AWS::SageMaker::Project',
    'AWS::SageMaker::Space',
    'AWS::SageMaker::StudioLifecycleConfig',
    'AWS::Scheduler::ScheduleGroup',
    'AWS::SecretsManager::Secret',
    'AWS::SecurityHub::AutomationRule',
    'AWS::SecurityHub::ConfigurationPolicy',
    'AWS::SecurityHub::Hub',
    'AWS::SecurityLake::DataLake',
    'AWS::SecurityLake::Subscriber',
    'AWS::ServiceCatalogAppRegistry::Application',
    'AWS::ServiceCatalogAppRegistry::AttributeGroup',
    'AWS::Shield::Protection',
    'AWS::Shield::ProtectionGroup',
    'AWS::Signer::SigningProfile',
    'AWS::StepFunctions::Activity',
    'AWS::StepFunctions::StateMachine',
    'AWS::Synthetics::Canary',
    'AWS::Synthetics::Group',
    'AWS::SystemsManagerSAP::Application',
    'AWS::Timestream::Database',
    'AWS::Timestream::InfluxDBInstance',
    'AWS::Timestream::ScheduledQuery',
    'AWS::Timestream::Table',
    'AWS::Transfer::Agreement',
    'AWS::Transfer::Certificate',
    'AWS::Transfer::Connector',
    'AWS::Transfer::Profile',
    'AWS::Transfer::Server',
    'AWS::Transfer::User',
    'AWS::Transfer::WebApp',
    'AWS::Transfer::Workflow',
    'AWS::VoiceID::Domain',
    'AWS::VpcLattice::AccessLogSubscription',
    'AWS::VpcLattice::Listener',
    'AWS::VpcLattice::ResourceConfiguration',
    'AWS::VpcLattice::ResourceGateway',
    'AWS::VpcLattice::Rule',
    'AWS::VpcLattice::Service',
    'AWS::VpcLattice::ServiceNetwork',
    'AWS::VpcLattice::ServiceNetworkResourceAssociation',
    'AWS::VpcLattice::ServiceNetworkServiceAssociation',
    'AWS::VpcLattice::ServiceNetworkVpcAssociation',
    'AWS::VpcLattice::TargetGroup',
    'AWS::WAFv2::IPSet',
    'AWS::WAFv2::RegexPatternSet',
    'AWS::WAFv2::RuleGroup',
    'AWS::WAFv2::WebACL',
    'AWS::Wisdom::AIAgent',
    'AWS::Wisdom::AIGuardrail',
    'AWS::Wisdom::AIPrompt',
    'AWS::Wisdom::Assistant',
    'AWS::Wisdom::AssistantAssociation',
    'AWS::Wisdom::KnowledgeBase',
    'AWS::Wisdom::MessageTemplate',
    'AWS::WorkSpaces::ConnectionAlias',
    'AWS::WorkSpaces::WorkspacesPool',
    'AWS::WorkSpacesThinClient::Environment',
    'AWS::WorkSpacesWeb::BrowserSettings',
    'AWS::WorkSpacesWeb::DataProtectionSettings',
    'AWS::WorkSpacesWeb::IdentityProvider',
    'AWS::WorkSpacesWeb::IpAccessSettings',
    'AWS::WorkSpacesWeb::NetworkSettings',
    'AWS::WorkSpacesWeb::Portal',
    'AWS::WorkSpacesWeb::TrustStore',
    'AWS::WorkSpacesWeb::UserAccessLoggingSettings',
    'AWS::WorkSpacesWeb::UserSettings',
    'AWS::XRay::Group',
    'AWS::XRay::SamplingRule',
]);

const EXCEPTIONS = new Set(['AWS::SSM::Parameter', 'AWS::EKS::Nodegroup']);

/**
 * Utility class providing helper functions for common CDK operations.
 *
 * This class contains static methods for tagging resources and retrieving
 * CDK lookup role ARNs.
 */
export const Utilities = {
    /**
     * Adds tags to a construct and all its children recursively.
     *
     * This method applies tags to both the CDK construct and the underlying CloudFormation
     * resources. For CloudFormation resources, it checks if the resource type supports
     * tagging before applying tags.
     *
     * @param object - The construct to which tags will be applied
     * @param tags - Map of tag keys and values to apply
     */
    TagConstruct(object: Construct, tags: { [key: string]: string }) {
        // Apply tags to the construct
        for (const [key, value] of Object.entries(tags)) {
            Tags.of(object).add(key, value);
        }

        // For CfnResource objects, we need to explicitly set the Tags property
        if (object instanceof CfnResource) {
            let cfnTags = Object.entries(tags).map(([key, value]) => ({
                Key: key,
                Value: value,
            }));

            // Special handling for AutoScaling Groups
            if (object.cfnResourceType === 'AWS::AutoScaling::AutoScalingGroup') {
                cfnTags = Object.entries(tags).map(([key, value]) => ({
                    Key: key,
                    Value: value,
                    PropagateAtLaunch: true,
                }));
            }

            // Only tag the resource if it's on the allowed list
            if (cfnTags.length > 0 && TAGGABLE_RESOURCE_TYPE_LIST.has(object.cfnResourceType)) {
                if (EXCEPTIONS.has(object.cfnResourceType)) {
                    // For these resource types, Tags must by added as a Map not an array or CFN will fail to deploy

                    object.addPropertyOverride('Tags', tags);
                } else {
                    object.addPropertyOverride('Tags', cfnTags);
                }
            } else {
                Annotations.of(object).addInfo(
                    `Skipping tags on resource ${object.logicalId} of type ${object.cfnResourceType}`,
                );
            }
        }

        // Recursively tag all child constructs
        for (const child of object.node.children) {
            this.TagConstruct(child, tags);
        }
    },

    /**
     * Recursively searches for child nodes in a construct by resource type and partial name match.
     *
     * @param construct - The root construct to search within
     * @param partialName - Partial match string for the resource name
     * @param resourceType - Optional CloudFormation resource type to search for (e.g., 'AWS::Lambda::Function')
     * @returns Array of matching constructs
     */
    FindChildNodes(construct: Construct, partialName: string, resourceType?: string): Construct[] {
        const matches: Construct[] = [];

        function searchRecursively(node: Construct) {
            // Check if current node is a CfnResource with matching name and optionally matching type
            if (
                node instanceof CfnResource &&
                node.toString().includes(partialName) &&
                (!resourceType || node.cfnResourceType === resourceType)
            ) {
                matches.push(node);
            }

            // Recursively search all children
            for (const child of node.node.children) {
                searchRecursively(child);
            }
        }

        searchRecursively(construct);
        return matches;
    },

    /**
     * Applies NAG suppressions to log retention resources in a construct.
     *
     * @param construct - The construct to search for log retention resources
     */
    SuppressLogRetentionNagWarnings(construct: Construct) {
        const logRetentionRole = this.FindChildNodes(construct, 'LogRetention', 'AWS::IAM::Role');
        for (const role of logRetentionRole) {
            const serviceRole = role as Role;
            NagSuppressions.addResourceSuppressions(
                serviceRole,
                [
                    {
                        id: 'AwsSolutions-IAM4',
                        reason: 'Log Retention lambda using managed policies is acceptable',
                    },
                ],
                true,
            );
        }

        const logRetentionPolicy = this.FindChildNodes(construct, 'LogRetention', 'AWS::IAM::Policy');
        for (const policy of logRetentionPolicy) {
            const serviceRole = policy as Policy;
            NagSuppressions.addResourceSuppressions(
                serviceRole,
                [
                    {
                        id: 'AwsSolutions-IAM5',
                        reason: 'Log Retention lambda using wildcard is acceptable',
                    },
                ],
                true,
            );
        }
    },

    SuppressKubectlProviderNagWarnings(construct: Construct) {
        const kubectlProvider = this.FindChildNodes(construct, 'KubectlProvider');
        for (const resource of kubectlProvider) {
            NagSuppressions.addResourceSuppressions(
                resource,
                [
                    {
                        id: 'AwsSolutions-IAM4',
                        reason: 'kubectl lambda using managed policies is acceptable',
                    },
                    {
                        id: 'AwsSolutions-IAM5',
                        reason: 'Kubectl lambda using wildcard is acceptable',
                    },
                    {
                        id: 'AwsSolutions-L1',
                        reason: 'Kubectl lambda managed by EKS Construct',
                    },
                ],
                true,
            );
        }
    },

    createSsmParameters(scope: Construct, prefix: string, parameters: Map<string, string>) {
        for (const [key, value] of parameters.entries()) {
            //const id = key.replace('/', '_');
            const fullKey = `${prefix}/${key}`;
            new StringParameter(scope, fullKey, { parameterName: fullKey, stringValue: value });
        }
    },

    createOuputs(scope: Construct, parameters: Map<string, string>) {
        for (const [key, value] of parameters.entries()) {
            new CfnOutput(scope, key, { value: value });
        }
    },
};
